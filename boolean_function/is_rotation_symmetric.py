

import math

def binary(num, length):            
    """将输入数字转化成指定bits长的数据
    """
    binary_string_list = list(format(num, '0{}b'.format(length)))
    return "".join(binary_string_list)


def is_rotation_symmetric(v):
    """
    返回布尔函数是否为旋转对称函数
    一个布尔函数称为旋转对称的当且仅当对其输入向量进行循环移位时, 输出值保值不变"""
    #todo: 再看一卡

    n = int(math.log(len(v), 2))
    flag = True
    num = []
    for i in range(n+1):
        num.append(2**i-1)
    for i in num:
        num = binary(i, n)
        temp = v[i]
        for j in range(1,n,1):
            x = num[-j:]+num[:-j]
            if v[int(x,2)] == temp:
                pass
            else:
                flag=False
                return flag
    return flag

def main():
    S=[3,8,15,1,10,6,5,11,14,13,4,2,7,0,9,12]
    # v = [0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,1]
    v = [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0]
    n = int(math.log(len(v), 2))
    print(is_rotation_symmetric(v))


if __name__ == "__main__":
    main()

